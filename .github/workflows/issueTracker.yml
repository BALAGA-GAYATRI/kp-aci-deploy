# This is a basic workflow to help you get started with Actions

name: testin_table

on: [workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: 'Generate Dashboard'
      id: dashboard
      uses: ethomson/issue-dashboard@v1
      with:
        config: |
          title: 'Dashboard'
          output:
            format: html
            filename: 'index.html'
          sections:
          - title: 'issues'
            widgets:
            - type: 'number'
              title: 'az login'
              issue_query: 'repo:Azure/login is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'webapps-deploy'
              issue_query: 'repo:Azure/webapps-deploy is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'aci-deploy'
              issue_query: 'repo:Azure/aci-deploy is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'functions-action'
              issue_query: 'repo:Azure/functions-action is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: number 
              script: | 
                const repo1 = 'Azure/login' 
                const repo2 = 'Azure/webapps-deploy' 
                const repo3 = 'Azure/aci-deploy'
                const repo4 = 'Azure/functions-action' 
                const results = await github.search.issuesAndPullRequests(
                { q: `repo:${repo1} repo:${repo2} repo:${repo3} repo:${repo4} is:issue is:open created:>${date('-365 day')}`}
                ) 
                const count = results.data.total_count 
                const title = 'total issues' 
                const color = (count > 10) ? 'red' : 'green' 
                return { value: count, title: title, color: color }
          - title: 'label-wise'
            widgets:
            - type: 'table'
              title: 'az login label-wise'
              headers:
              - 'need-to-triage'
              - 'enhancement'
              - 'under-investigation'	
              - 'question'
              - 'bug'
              - 'documentation'
              - 'suggestion'
              - 'performance-issue'
              - 'waiting-for-customer'
              - 'external-dependency'
              elements:
              - - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:need-to-triage created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url: 'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aneed-to-triage'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:enhancement created:>${date('-365 day')}`}
                    )
                    console.log(results.data.items.length)
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:under-investigation created:>${date('-365 day')}`}
                    )
                    console.log(results.data.items.length)
                    if(results.data.items.length === 0){
                      return { value: '0', url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aunder-investigation'}
                    }
                    else{
                      return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aunder-investigation'}
                    }
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:question created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aquestion'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:bug created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Abug'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:documentation created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3documentation'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:suggestion created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Asuggestion'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:performance-issue created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aperformance-issue'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:waiting-for-customer created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count , url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Awaiting-for-customer'}
                - script: |
                    const repo1 = 'Azure/login'
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:issue is:open label:external-dependency created:>${date('-365 day')}`}
                    )
                    return { value: results.data.total_count ,url:'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aexternal-dependency'}
               
                  
        token: ${{ github.token }}

    - name: Commit files
      id: commit
      run: |
        git config --local user.email "kanika1894@github.com"
        git config --local user.name "kanika1894"
        git add --all
        if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
        fi
      shell: bash
 
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
