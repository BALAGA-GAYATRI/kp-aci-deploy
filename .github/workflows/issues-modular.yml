name: issues-modular
'on':
  - workflow_dispatch
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: 'Generate Dashboard'
        id: dashboard
        uses: ethomson/issue-dashboard@v1
        with:
          config: |
            title: 'Issues detailed view'
            output:
              format: html
              filename: 'issue-modular.html'
            setup: |
                function sleep(milliseconds) {
                    const date = Date.now();
                    let currentDate = null;
                    do {currentDate = Date.now();} 
                    while (currentDate - date < milliseconds);
                }
                userdata.count = async function(repo,label) {
                  sleep(2000)
                  const state = (label==="closed")? "closed" : "open"
                  var results;
                  if(label === "" || label === "closed") {
                      results = await github.search.issuesAndPullRequests(
                      { q: `repo:${repo} is:issue is:${state}` }
                      )
                  }
                  else if(label === "stale") {
                      results = await github.search.issuesAndPullRequests(
                      { q: `repo:${repo} is:issue is:${state} created:<${date("-90 days")}`}
                      )
                  }
                  else{
                    results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo} is:issue is:${state} label:${label}`}
                    )
                  }
                  if(results.data.items.length === 0){
                    return '0'
                  }
                  else{
                    return results.data.total_count 
                  }
                }
                userdata.url = async function(repo,label) {
                  sleep(2000)
                  const state = (label==="closed")? "closed" : "open"
                  var url;
                  if(label === "" || label === "closed") {
                  url = 'https://github.com/'+repo+'/issues?q=is%3Aissue+is%3A'+ state
                  }
                  else if(label === "stale") {
                    var today = new Date();
                    var PastDate=new Date(today);
                    PastDate.setDate(PastDate.getDate() - 90);
                    var staledate = PastDate.toISOString().split("T")[0];
                    url = 'https://github.com/' + repo + '/issues?q=is%3Aissue+is%3A' + state + '+created%3A<'+staledate+'+'
                  }
                  else{
                    url = 'https://github.com/'+repo+'/issues?q=is%3Aissue+is%3A'+state+'+label%3A'+label
                  }
                  return url
                } 
            sections:
            - title: ''
              widgets:
              - type: 'table'
                headers:
                - 'action'
                - 'open issues'
                - 'need-to-triage'
                elements:
                - ['Azure/login',{{userdata.count("Azure/login","")}}, {{userdata.count("Azure/login","need-to-triage")}}]
                              


          token: ${{ github.token }}
      - name: Commit files
        id: commit
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          if [-z "$(git status --porcelain)"]; then
             echo "::set-output name=push::false"
          else
             git commit -m "Add changes" -a
             echo "::set-output name=push::true"
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          
# - - script: | 
#                       const repo1 = 'Azure/login' 
#                       const results = await github.search.issuesAndPullRequests(
#                       { q: `repo:${repo1} is:issue is:open label:need-to-triage created:>${date('-365 day')}`}
#                       ) 
#                       return { { value: results.data.total_count ,url: 'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aneed-to-triage'},
#                               { value: results.data.total_count ,url: 'https://github.com/Azure/login/issues?q=is%3Aissue+is%3Aopen+label%3Aneed-to-triage'} }

# - 'enhancement'
#                 - 'question'
#                 - 'bug'
#                 - 'documentation'
#                 - 'performance-issue'
#                 - 'waiting-for-customer'
#                 - 'external-dependency'
#                 - 'idle(inactive>14days)'
#                 - 'stale(90 days old)'
