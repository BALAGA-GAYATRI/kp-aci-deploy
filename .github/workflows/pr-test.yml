# This is a basic workflow to help you get started with Actions

name: pr-counter

on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: 'Generate Dashboard'
      id: dashboard
      uses: ethomson/issue-dashboard@v1
      with:
        config: |
          title: 'PR Dashboard sections update'
          output:
            format: html
            filename: 'pr.html'
          setup: |
              userdata.values = async function(repo,label) {
                const repo1 = repo
                const label1 = label
                const results = await github.search.issuesAndPullRequests(
                { q: `repo:${repo1} is:pr is:open label:${label1}`}
                )
                if(results.data.items.length === 0){
                  return '0'
                }
                else{
                  return results.data.total_count 
                }
              }
              userdata.urls = async function(repo,label) {
                const repo1 = repo
                const prlink = 'https://github.com/'+repo+'/pulls?q=is%3Apr+is%3Aopen+label%3A'+label
                return prlink
              }  
              
          sections:
          - title: 'Az login'
            widgets:
            - type: 'table'
              headers:
              - 'PR category'
              - 'Count'
              elements:
              - - value: 'Total PRs'
                - value: '{{ userdata.values("Azure/login","") }}'
                  url: '{{ userdata.urls("Azure/login","") }}'
                    
              - - value: 'Idle PRs'
                - value: '{{ userdata.values("Azure/login","idle") }}'
                  url: '{{ userdata.urls("Azure/login","idle") }}'
                  
              - - value: 'Idle PRs'
                - script: | 
                    const repo1 = 'Azure/login' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open label:idle`}
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'yellow' : 'green' 
                    return { value: count, color: color }
                    
              - - value: 'Stale PRs'
                - script: | 
                    const repo1 = 'Azure/login' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open created:<${date('-90 days')}` }
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'red' : 'green' 
                    return { value: count, color: color }
                    
          - title: 'aci-deploy'
            widgets:
            - type: 'table'
              headers:
              - 'PR category'
              - 'Count'
              elements:
              - - value: 'Total PRs'
                - script: | 
                    const repo1 = 'Azure/aci-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open`}
                    ) 
                    const count = (results.data.items.length === 0) ? 0 : results.data.total_count
                    const color = (count > 10) ? 'red' : 'green' 
                    return { value: count, color: color }
                    
              - - value: 'Idle PRs'
                - script: | 
                    const repo1 = 'Azure/aci-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open label:idle`}
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'yellow' : 'green' 
                    return { value: count, color: color }
                    
              - - value: 'Stale PRs'
                - script: | 
                    const repo1 = 'Azure/aci-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open created:<${date('-90 days')}` }
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'red' : 'green' 
                    return { value: count, color: color }
          - title: 'aci-deploy'
            widgets:
            - type: 'table'
              headers:
              - 'PR category'
              - 'Count'
              elements:
              - - value: 'Total PRs'
                - script: | 
                    const repo1 = 'Azure/webapps-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open`}
                    ) 
                    const count = (results.data.items.length === 0) ? 0 : results.data.total_count
                    const color = (count > 10) ? 'red' : 'green' 
                    return { value: count, color: color }
                    
              - - value: 'Idle PRs'
                - script: | 
                    const repo1 = 'Azure/webapps-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open label:idle`}
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'yellow' : 'green' 
                    return { value: count, color: color }
                    
              - - value: 'Stale PRs'
                - script: | 
                    const repo1 = 'Azure/webapps-deploy' 
                    const results = await github.search.issuesAndPullRequests(
                    { q: `repo:${repo1} is:pr is:open created:<${date('-90 days')}` }
                    ) 
                    const count = (results.data.items.length === 0) ? '0' : results.data.total_count
                    const color = (count > 0) ? 'red' : 'green' 
                    return { value: count, color: color }
                    
        token: ${{ github.token }}

    - name: Commit files
      id: commit
      run: |
        git config --local user.email "kanika1894@github.com"
        git config --local user.name "kanika1894"
        git add --all
        if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
        fi
      shell: bash
 
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
